<UserControl x:Class="Dependencies.Viewer.Wpf.Controls.Views.AnalyserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:msBehaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:localBehaviors="clr-namespace:Dependencies.Viewer.Wpf.Controls.Behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
             xmlns:local="clr-namespace:Dependencies.Viewer.Wpf.Controls.Views"
             xmlns:vm="clr-namespace:Dependencies.Viewer.Wpf.Controls.ViewModels"
             xmlns:converters="clr-namespace:Dependencies.Viewer.Wpf.Controls.ViewConverters"
             x:Name="analyserView"
             AllowDrop="True"
             d:DataContext="{d:DesignInstance Type=vm:AnalyserViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type vm:AnalyseResultViewModel}">
            <local:AnalyseResultView DataContext="{Binding }"/>
        </DataTemplate>

        <Style x:Key="DynamicSubMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="Command" Value="{Binding Command}" />
            <Setter Property="Header" Value="{Binding Title}" />
            <Setter Property="MinWidth" Value="120" />
        </Style>

        <Style x:Key="DynamicMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <msBehaviors:Interaction.Triggers>
        <msBehaviors:EventTrigger EventName="DragOver">
            <msBehaviors:InvokeCommandAction Command="{Binding OnDragOverCommand}" PassEventArgsToCommand="True" />
        </msBehaviors:EventTrigger>
        <msBehaviors:EventTrigger EventName="Drop">
            <msBehaviors:InvokeCommandAction Command="{Binding OnDropCommand}" PassEventArgsToCommand="True" />
        </msBehaviors:EventTrigger>
        <msBehaviors:EventTrigger EventName="DragEnter">
            <msBehaviors:InvokeCommandAction Command="{Binding OnDragEnterCommand}" PassEventArgsToCommand="True" />
        </msBehaviors:EventTrigger>
        <msBehaviors:EventTrigger EventName="DragLeave">
            <msBehaviors:InvokeCommandAction Command="{Binding OnDragLeaveCommand}" PassEventArgsToCommand="True" />
        </msBehaviors:EventTrigger>
    </msBehaviors:Interaction.Triggers>
    <Grid x:Name="mainGrid">
        <Grid IsEnabled="{Binding BusyService.IsBusy, Converter={x:Static converters:InverseBooleanConverter.Converter} }">
            <dockablz:Layout>
                <dragablz:TabablzControl ItemsSource="{Binding AssemblyModels}" 
                                             HeaderMemberPath="Name" 
                                             ShowDefaultCloseButton="True"
                                             SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                    <dragablz:TabablzControl.ItemContainerStyle>
                        <Style TargetType="dragablz:DragablzItem" BasedOn="{StaticResource {x:Type dragablz:DragablzItem}}">
                            <Setter Property="localBehaviors:InputBindingBehavior.InputBindings">
                                <Setter.Value>
                                    <InputBindingCollection>
                                        <MouseBinding Gesture="MiddleClick" Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"/>
                                    </InputBindingCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </dragablz:TabablzControl.ItemContainerStyle>


                    <dragablz:TabablzControl.HeaderPrefixContent >
                        <Menu Focusable="False" DockPanel.Dock="Left" SnapsToDevicePixels="True" 
                                  Background="{DynamicResource AccentBaseColorBrush}"
                                  Foreground="White">
                            <MenuItem Focusable="False" Height="40">
                                <MenuItem.Header>
                                    <Grid >
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                            <TextBlock Text="File" Margin="0,0,5,0" />
                                            <materialDesign:PackIcon Kind="MenuDown" />
                                        </StackPanel>
                                    </Grid>
                                </MenuItem.Header>

                                <MenuItem Header="Open File" Command="{Binding OpenFileCommand}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="FileFindOutline"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <Separator/>

                                <MenuItem x:Name="exportMenuItem" Header="Export" ItemsSource="{Binding ExportCommands}"
                                          ItemContainerStyle="{StaticResource DynamicSubMenuItemStyle}">
                                    <MenuItem.Style>
                                        <Style TargetType="MenuItem" BasedOn="{StaticResource DynamicMenuItemStyle}">
                                            <Setter Property="IsEnabled" Value="true"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Export"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem x:Name="importMenuItem" Header="Import" ItemsSource="{Binding ImportCommands}" Style="{StaticResource DynamicMenuItemStyle}"
                                          ItemContainerStyle="{StaticResource DynamicSubMenuItemStyle}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Import"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <Separator>
                                    <Separator.Style>
                                        <Style TargetType="Separator" BasedOn="{StaticResource {x:Type Separator}}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=importMenuItem, Path=HasItems}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=exportMenuItem, Path=HasItems}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Separator.Style>
                                </Separator>


                                <MenuItem Header="About" Command="{Binding AboutCommand}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="AboutOutline"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <Separator/>

                                <MenuItem Header="Exit" Command="{Binding CloseCommand}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ExitToApp"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                            </MenuItem>
                        </Menu>
                    </dragablz:TabablzControl.HeaderPrefixContent>

                    <dragablz:TabablzControl.HeaderSuffixContent>
                        <Button Command="{Binding SettingsCommand}" ToolTip="Open Settings" Height="NaN" Margin="1 0 1 1" 
                                    Padding="0"
                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                    Width="40" HorizontalAlignment="Right">
                            <materialDesign:PackIcon Kind="SettingsOutline"  Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                        </Button>
                    </dragablz:TabablzControl.HeaderSuffixContent>

                    <dragablz:TabablzControl.InterTabController>
                        <dragablz:InterTabController InterTabClient="{Binding InterTabClient}"/>
                    </dragablz:TabablzControl.InterTabController>
                </dragablz:TabablzControl>
            </dockablz:Layout>
            <local:DragControl Visibility="{Binding IsDragFile, Converter={x:Static converters:VisibilityConverter.Converter}}"/>
        </Grid>


        <Grid Visibility="{Binding BusyService.IsBusy, Converter={x:Static converters:VisibilityConverter.Converter}}">
            <Rectangle Fill="Black" Opacity="0.2"/>
            <mahapps:ProgressRing IsActive="{Binding BusyService.IsBusy}"/>
        </Grid>
    </Grid>
</UserControl>
